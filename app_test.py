import streamlit as st
from PIL import Image
import openai
import os
import tempfile
from pdf2image import convert_from_bytes
from fpdf import FPDF
import pytesseract
import re
import requests
from bs4 import BeautifulSoup
from PyPDF2 import PdfReader

# Load OpenAI API key
api_key = os.getenv("OPENAI_API_KEY")
if not api_key:
    st.error("‚ùå OPENAI_API_KEY manquante.")
    st.stop()

client = openai.OpenAI(api_key=api_key)

# Fonctions utilitaires

def image_to_pdf_path(image: Image.Image):
    image = image.convert("RGB")
    temp_pdf = tempfile.NamedTemporaryFile(delete=False, suffix=".pdf")
    image.save(temp_pdf.name, format="PDF")
    return temp_pdf.name

def export_text_to_pdf(text: str, filename: str):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.set_font("Arial", size=10)
    for line in text.split('\n'):
        pdf.multi_cell(0, 10, line)
    pdf_path = os.path.join(tempfile.gettempdir(), filename)
    pdf.output(pdf_path)
    return pdf_path

def extract_text(image: Image.Image):
    return pytesseract.image_to_string(image)

def detect_medicament_name(text: str):
    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "user", "content": f"Voici le texte extrait par OCR d'un support promotionnel :

{text}

Peux-tu d√©tecter le nom du m√©dicament (nom commercial) mentionn√© dans ce support ? R√©ponds uniquement par ce nom."}
            ],
            max_tokens=20
        )
        return response.choices[0].message.content.strip()
    except:
        return None

def find_rcp_url_from_bdpm(med_name: str):
    try:
        search_url = f"https://base-donnees-publique.medicaments.gouv.fr/index.php?search={med_name}"
        response = requests.get(search_url)
        soup = BeautifulSoup(response.content, "html.parser")
        link = soup.find("a", href=re.compile(r"\.pdf$"))
        if link:
            return "https://base-donnees-publique.medicaments.gouv.fr" + link["href"]
    except:
        return None

def download_rcp_pdf(url, med_name):
    try:
        response = requests.get(url)
        rcp_path = os.path.join(tempfile.gettempdir(), f"{med_name}_rcp.pdf")
        with open(rcp_path, "wb") as f:
            f.write(response.content)
        return rcp_path
    except:
        return None

def extract_pdf_text(pdf_path):
    try:
        reader = PdfReader(pdf_path)
        text = "\n".join(page.extract_text() for page in reader.pages if page.extract_text())
        return text.strip()
    except:
        return ""

def summarize_amm(text: str):
    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "user", "content": f"Voici le RCP d'un m√©dicament :\n{text[:4000]}\n\nPeux-tu en faire un r√©sum√© clair des indications, contre-indications, posologies et pr√©cautions d'emploi ?"}
            ],
            max_tokens=700
        )
        return response.choices[0].message.content
    except:
        return ""

def build_prompt(support_type: str, diffusion_context: str, amm_summary: str):
    return f"""
# üéØ Prompt expert conformit√© r√©glementaire (pharma)

Tu es un expert r√©glementaire dans un laboratoire pharmaceutique, sp√©cialiste de la conformit√© des supports promotionnels destin√©s aux professionnels de sant√©. Tu ma√Ætrises parfaitement la r√©glementation fran√ßaise, notamment :

- Le Code de la sant√© publique (articles L.5122-1 √† L.5122-15)
- La Charte de l'information par d√©marchage ou prospection visant √† la promotion des m√©dicaments
- Le R√©f√©rentiel de certification de la visite m√©dicale
- Les recommandations de l‚ÄôANSM sur la publicit√© des m√©dicaments
- Les exigences de l‚ÄôEMA, lorsqu‚Äôelles s‚Äôappliquent

---

## üßæ Contexte sp√©cifique fourni par l‚Äôutilisateur

- **Type de support s√©lectionn√©** : {support_type}
- **Lieu ou mode de diffusion pr√©vu** : {diffusion_context}

---

## üìé R√©sum√© du RCP (AMM)

{amm_summary}

---

## üßæ √âtapes de l‚Äôanalyse

### 1. üóÇÔ∏è Identifier le type de support

Indique parmi les options suivantes :
- banni√®re web
- diapositive PowerPoint
- affiche / kakemono
- page de magazine
- encart email
- prospectus / flyer
- plaquette produit
- autre (√† pr√©ciser)

üí° *Adapte le niveau d‚Äôexigence r√©glementaire selon le type de support, en tenant compte des √©l√©ments suivants :*

| Type de support         | Mentions obligatoires exig√©es                                     | Format particulier ou d√©rogatoire                                     |
|-------------------------|--------------------------------------------------------------------|------------------------------------------------------------------------|
| **Banni√®re web**        | Nom du m√©dicament, DCI, lien vers mentions compl√®tes               | Les mentions peuvent √™tre accessibles via un lien cliquable adjacent  |
| **Encart email**        | Nom du m√©dicament, DCI, r√©sum√© AMM, effets ind√©sirables            | L‚Äôemail peut renvoyer via un lien vers le RCP ou mentions l√©gales     |
| **Affiche / Kakemono**  | Nom, DCI, AMM, effets ind√©sirables, laboratoire, mentions l√©gales  | Doivent √™tre visibles sans zoom, format lisible √† distance            |
| **Page de magazine**    | Toutes mentions usuelles selon r√©glementation papier               | Idem qu‚Äôaffiche : pas de lien hypertexte possible                     |
| **Flyer / Prospectus**  | Mention compl√®te du m√©dicament, DCI, AMM, effets ind√©sirables      | S‚Äôil est √† destination papier seule, toutes les mentions doivent figurer |
| **Plaquette produit**   | Toutes mentions compl√®tes + sources si √©tudes cit√©es              | Support souvent d√©taill√© : exigence maximale de conformit√©             |
| **Diapositive PowerPoint** | Nom du m√©dicament, DCI, r√©sum√© AMM (ou en annexe), effets ind√©sirables | V√©rifier lisibilit√© et √©quilibre √† l‚Äôoral comme √† l‚Äô√©crit             |
| **Autre**               | √Ä √©valuer selon le format et la diffusion pr√©vue                  | Si usage digital ou √©v√©nementiel, adapter au canal                    |

üîé En cas de **format court**, les mentions obligatoires peuvent figurer dans un lien (web) ou sur une page d√©di√©e compl√©mentaire, **mais doivent √™tre accessibles imm√©diatement** (pas de d√©marche complexe pour y acc√©der).

---

### 2. üîç Effectuer un OCR complet de l‚Äôimage

- Extraire **l‚Äôint√©gralit√© du texte visible**.
- Conserver la **mise en forme s√©mantique** : titres, encadr√©s, couleurs, tableaux, ast√©risques‚Ä¶
- Signaler toute **illisibilit√©**, **√©l√©ment masqu√©**, **texte trop petit** ou **support partiel** (ex. une seule face d‚Äôun flyer recto/verso).

---

### 3. ‚úÖ V√©rifier la conformit√© r√©glementaire

#### A. Mentions obligatoires
- Nom du m√©dicament
- DCI (D√©nomination Commune Internationale)
- Informations AMM (titulaire, num√©ro, date)
- Mention obligatoire : *"Ce m√©dicament est un produit de sant√©. Ne pas interrompre un traitement sans avis m√©dical"* (si applicable)
- Prix et taux de remboursement (si applicable)

#### B. √âquilibre b√©n√©fices / risques
- Pr√©sentation objective des b√©n√©fices
- Mention des effets ind√©sirables
- Absence de banalisation ou minimisation des risques

#### C. R√©f√©rences scientifiques
- Pr√©sence de sources claires
- Publications accessibles, fiables, pertinentes, dat√©es
- Fid√©lit√© des extraits aux publications originales

#### D. Caract√®re promotionnel
- Ton neutre, professionnel
- Absence de superlatifs non autoris√©s (ex : "le meilleur", "unique", "r√©volutionnaire")
- Formulations factuelles, non trompeuses

#### E. Publicit√© comparative
- Comparaison √©ventuelle avec d‚Äôautres produits
- Comparaison loyale, fond√©e, non d√©nigrante et compl√®te

#### F. Sp√©cificit√©s de la cible
- Contenu adapt√© aux **professionnels de sant√©**
- Absence de confusion possible avec une cible **grand public**

#### G. Identification du laboratoire
- Nom du laboratoire clairement indiqu√©
- Coordonn√©es, mentions l√©gales, site web, etc.

#### H. Lisibilit√© & ergonomie
- Mentions lisibles sans zoom
- Taille de police suffisante
- Hi√©rarchie visuelle claire
- Contraste suffisant entre texte et fond

---

## üìä Rapport structur√©

### A. Note globale de conformit√©

Attribue une note sur 100 avec cette √©chelle :
- ‚úÖ **90 ‚Äì 100** : Conforme
- ‚ö†Ô∏è **75 ‚Äì 89** : √Ä corriger
- ‚ùå **< 75** : Non conforme

### B. R√©sum√© des points critiques

### C. Tableau de conformit√© d√©taill√©

| Axe                       | Statut     | Justification concise                               |
|--------------------------|------------|-----------------------------------------------------|
| Mentions obligatoires    |            |                                                     |
| √âquilibre b√©n√©fices/risques |            |                                                     |
| R√©f√©rences scientifiques |            |                                                     |
| Caract√®re promotionnel   |            |                                                     |
| Publicit√© comparative    |            |                                                     |
| Sp√©cificit√© de la cible  |            |                                                     |
| Identification labo      |            |                                                     |
| Lisibilit√©/ergonomie     |            |                                                     |

### D. Propositions de reformulation

Exemples :
- ‚ùå ‚ÄúLe meilleur traitement disponible‚Äù ‚Üí ‚úÖ ‚ÄúTraitement recommand√© par les recommandations actuelles‚Äù
- ‚ùå ‚ÄúTol√©rance parfaite‚Äù ‚Üí ‚úÖ ‚ÄúTol√©rance √©valu√©e dans l‚Äô√©tude X, avec X % d‚Äôeffets ind√©sirables‚Äù

---

## üß† Conclusion r√©glementaire synth√©tique

**Avis final** :  
‚úÖ Conforme  
‚ö†Ô∏è √Ä corriger avant diffusion  
‚ùå Non conforme ‚Äì retour au marketing recommand√©

> Recommandation : relire ce support avec le pharmacien responsable si des points critiques sont confirm√©s (ex. all√©gation sans source, donn√©es cliniques douteuses).

---

## üìé Bonus (optionnel)

- Signale toute incoh√©rence scientifique ou juridique critique.
- Pr√©cise s‚Äôil est recommand√© d‚Äôeffectuer une **validation interne finale** par le responsable conformit√©.
"""

# Interface Streamlit
st.title("Analyse r√©glementaire ANSM avec GPT-4o")

support_type = st.selectbox("üìÇ Type de support promotionnel :", [
    "Banni√®re web", "Diapositive PowerPoint", "Affiche / Kakemono",
    "Page de magazine", "Encart email", "Prospectus / Flyer",
    "Plaquette produit", "Autre (pr√©ciser)"
])

diffusion_context = st.text_input("üåç Contexte ou lieu de diffusion :")

manual_override = st.checkbox("‚úçÔ∏è Entrer manuellement le nom du m√©dicament")
manual_name = st.text_input("üíä Nom du m√©dicament (si connu)", "") if manual_override else ""

uploaded_file = st.file_uploader("üìÅ Uploader une image ou un PDF", type=["pdf", "png", "jpg", "jpeg"])

ocr_text, medicament_name, ammpath, amm_text, amm_summary = "", "", "", "", ""

if uploaded_file:
    if uploaded_file.type == "application/pdf":
        pdf_path = tempfile.NamedTemporaryFile(delete=False, suffix=".pdf").name
        with open(pdf_path, "wb") as f:
            f.write(uploaded_file.read())
        pages = convert_from_bytes(open(pdf_path, "rb").read())
        image = pages[0]
    else:
        image = Image.open(uploaded_file)
        pdf_path = image_to_pdf_path(image)

    st.image(image, caption="üñºÔ∏è Aper√ßu du support")
        ocr_text = extract_text(image)
    st.subheader("üìù Texte extrait par OCR")
    st.code(ocr_text[:2000] if ocr_text else "(aucun texte extrait)", language="text")
            # Demande explicite √† GPT-4o pour d√©tecter le nom du m√©dicament depuis le texte OCR
        with st.spinner("üîç D√©tection du nom du m√©dicament via GPT-4o..."):
            try:
                name_response = client.chat.completions.create(
                    model="gpt-4o",
                    messages=[
                        {"role": "user", "content": f"Voici le texte extrait par OCR d'un support promotionnel :

{ocr_text}

Peux-tu d√©tecter le nom du m√©dicament (nom commercial) mentionn√© dans ce support ? R√©ponds uniquement par ce nom."}
                    ],
                    max_tokens=20
                )
                medicament_name = manual_name or name_response.choices[0].message.content.strip()
            except Exception as e:
                st.error("‚ùå √âchec de la d√©tection via GPT.")
                medicament_name = ""

    if medicament_name:
        medicament_name = st.text_input("‚úèÔ∏è Nom du m√©dicament d√©tect√© (modifiable) :", medicament_name)
        st.info(f"üîç M√©dicament utilis√© pour la recherche : **{medicament_name}**")
                        st.error("‚ùå √âchec du r√©sum√© de l'AMM.")
                else:
                    st.error("‚ùå √âchec d‚Äôextraction du texte du RCP.")
            else:
                st.error("‚ùå T√©l√©chargement du RCP impossible.")
        else:
            st.warning("‚ö†Ô∏è Aucun lien RCP trouv√© sur la BDPM.")
    else:
        st.warning("‚ùì Aucun m√©dicament d√©tect√© dans l‚Äôimage.")

    if st.button("üîç Lancer l'analyse r√©glementaire compl√®te"):
        with st.spinner("üìä Analyse r√©glementaire en cours..."):
            try:
                with open(pdf_path, "rb") as f:
                    file = client.files.create(file=f, purpose="assistants")

                response = client.chat.completions.create(
                    model="gpt-4o",
                    messages=[
                        {
                            "role": "user",
                            "content": [
                                {"type": "text", "text": build_prompt(support_type, diffusion_context, amm_summary)},
                                {"type": "file", "file": {"file_id": file.id}}
                            ]
                        }
                    ],
                    max_tokens=1500
                )
                final_text = response.choices[0].message.content
                st.success("‚úÖ Analyse termin√©e")
                st.markdown(final_text)
                st.download_button("üì• T√©l√©charger le rapport en PDF", data=open(export_text_to_pdf(final_text, "rapport_ansm.pdf"), "rb").read(), file_name="rapport_ansm.pdf")
                if ammpath:
                    st.download_button("üì• T√©l√©charger le RCP (AMM)", data=open(ammpath, "rb").read(), file_name=f"{medicament_name}_rcp.pdf")
            except Exception as e:
                st.error(f"‚ùå Erreur OpenAI : {e}")
